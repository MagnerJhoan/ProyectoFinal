/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import java.io.File; // Importa la clase File del paquete java.io para manejar archivos y directorios
import java.io.FileInputStream; // Importa la clase FileInputStream del paquete java.io para leer datos de un archivo
import java.io.FileOutputStream; // Importa la clase FileOutputStream del paquete java.io para escribir datos en un archivo
import java.io.IOException; // Importa la clase IOException del paquete java.io para manejar excepciones de entrada y salida de datos
import java.io.ObjectInputStream; // Importa la clase ObjectInputStream del paquete java.io para leer objetos desde un flujo de entrada
import java.io.ObjectOutputStream; // Importa la clase ObjectOutputStream del paquete java.io para escribir objetos en un flujo de salida
import javax.swing.JOptionPane; // Importa la clase JOptionPane del paquete javax.swing para mostrar ventanas de diálogo


/**
 *
 * @author MAGNER
 */
/**
 * Clase RegistroQuechua que representa la interfaz de registro de usuarios.
 */
public class RegistroQuechua extends javax.swing.JFrame {
    public Principal principal = new Principal(); // Instancia de la clase Principal
    
    public String usuario = "null"; // Variable para almacenar el nombre de usuario
    
    /**
     * Constructor de la clase Registro.
     * @param name El nombre de usuario.
     */
    public RegistroQuechua(String name){
        initComponents(); // Inicializa los componentes de la interfaz gráfica
        this.usuario=name; // Asigna el nombre de usuario
        cargar(); // Carga los datos de los clientes desde el archivo
    }
    
    /**
     * Constructor de la clase Registro.
     */
    public RegistroQuechua() {
        initComponents(); // Inicializa los componentes de la interfaz gráfica
        setLocationRelativeTo(null); // Centra la ventana en la pantalla
        cargar(); // Carga los datos de los clientes desde el archivo
    }
    
    /**
     * Método para cargar los datos de los clientes desde el archivo.
     */
    public void cargar (){
        FileInputStream archivo = null; // Declara una variable para leer datos de un archivo
        ObjectInputStream convertidorarchivo = null; // Declara una variable para convertir datos desde un archivo

        try {
            archivo = new FileInputStream("C://Metodos//Cajero.txt"); // Abre el archivo para lectura
            convertidorarchivo = new ObjectInputStream(archivo); // Prepara el objeto para leer desde el archivo
            principal = (Principal) convertidorarchivo.readObject(); // Lee el objeto Principal desde el archivo y lo asigna a la instancia principal
        } catch (IOException ex) { // Captura la excepción en caso de error de entrada/salida
            File archivos = new File("C://Metodos//Cajero.txt"); // Crea un nuevo archivo si no se encuentra el archivo existente
        } catch (ClassNotFoundException cnfe) { // Captura la excepción en caso de no encontrar la clase principal
            cnfe.printStackTrace(); // Imprime la traza de la excepción
        }
    }
    
    /**
     * Método para actualizar la lista de clientes en el archivo.
     */
    private void actualizarLista() {
        try {
            FileOutputStream ficherosalida = new FileOutputStream("C://Metodos//Cajero.txt"); // Abre el archivo para escritura
            ObjectOutputStream convertidor = new ObjectOutputStream(ficherosalida); // Prepara el objeto para escribir en el archivo
            convertidor.writeObject(principal); // Escribe el objeto principal en el archivo
            convertidor.close(); // Cierra el flujo de escritura
            ficherosalida.close(); // Cierra el archivo
        } catch (IOException ex) { // Captura la excepción en caso de error de entrada/salida
            ex.printStackTrace(); // Imprime la traza de la excepción
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtCi = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtContraseña = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("TILIPUNA");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 130, 20));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("RUNAKUNA RIKCH'A ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 370, 40));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("RUNAPA");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 130, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("SUTI");
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 132, 130, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("QHIPA SUTI");
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 174, 130, 20));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("WASHA");
        jLabel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 130, 20));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("SIMIKAMA");
        jLabel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 130, 20));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("CI");
        jLabel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 130, 20));

        txtNombre.setBackground(new java.awt.Color(0, 51, 51));
        txtNombre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(255, 255, 255));
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 342, -1));

        txtCi.setBackground(new java.awt.Color(0, 51, 51));
        txtCi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtCi.setForeground(new java.awt.Color(255, 255, 255));
        txtCi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCiKeyTyped(evt);
            }
        });
        jPanel1.add(txtCi, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 340, -1));

        txtDireccion.setBackground(new java.awt.Color(0, 51, 51));
        txtDireccion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtDireccion.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 342, -1));

        txtApellido.setBackground(new java.awt.Color(0, 51, 51));
        txtApellido.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtApellido.setForeground(new java.awt.Color(255, 255, 255));
        txtApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoActionPerformed(evt);
            }
        });
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });
        jPanel1.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 342, -1));

        txtUsuario.setBackground(new java.awt.Color(0, 51, 51));
        txtUsuario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtUsuario.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, 337, 30));

        txtTelefono.setBackground(new java.awt.Color(0, 51, 51));
        txtTelefono.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTelefono.setForeground(new java.awt.Color(255, 255, 255));
        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 340, -1));

        txtContraseña.setBackground(new java.awt.Color(0, 51, 51));
        txtContraseña.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtContraseña.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, 340, -1));

        jButton7.setBackground(new java.awt.Color(0, 51, 51));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("QILLQANA CHURAY ");
        jButton7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BANKU CACHUPIN");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logf1nuevo.jpg"))); // NOI18N
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 460, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("QHIPANAY");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 490, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pngwing.com (4).png"))); // NOI18N
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/f4.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 0, 610, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Método invocado cuando se hace clic en el botón jButton7.
     * Realiza el registro de un nuevo cliente.
     */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (!txtNombre.getText().equals("") && !txtCi.getText().equals("") && !txtDireccion.getText().equals("") && !txtApellido.getText().equals("") && !txtUsuario.getText().equals("") && !txtTelefono.getText().equals("") && !txtContraseña.getText().equals("")) {
            if (!existeUsuario(txtUsuario.getText())) { // Verifica si el usuario ya existe
                Cliente nuevoCliente = new Cliente(txtNombre.getText(), txtApellido.getText(), Integer.parseInt(txtCi.getText()), txtDireccion.getText(), Integer.parseInt(txtTelefono.getText()), txtUsuario.getText(), txtContraseña.getText()); // Crea un nuevo cliente
                principal.getListaCliente().add(nuevoCliente); // Agrega el nuevo cliente a la lista de clientes
                actualizarLista(); // Actualiza la lista de clientes en el archivo
                CuentasQuechua cuentas = new CuentasQuechua(txtUsuario.getText()); // Crea una instancia de la interfaz Cuentas
                cuentas.setLocationRelativeTo(null); // Establece la ubicación relativa de la ventana de cuentas
                cuentas.setVisible(true); // Hace visible la ventana de cuentas
                dispose(); // Cierra la ventana actual
            } else {
                JOptionPane.showMessageDialog(null, "Ruraqqa qillqa kani", "llamk'ay", JOptionPane.INFORMATION_MESSAGE); // Muestra un mensaje de error si el usuario ya existe
            }
        } else {
            JOptionPane.showMessageDialog(null, "Qillqanakuta kamachiqta munani, yachaykama.", "llamk'ay", JOptionPane.INFORMATION_MESSAGE); // Muestra un mensaje de error si no se completan todos los campos
        }

    }//GEN-LAST:event_jButton7ActionPerformed
     /**
     * Método para verificar si un usuario ya existe en la lista de clientes.
     * @param usu El nombre de usuario a verificar.
     * @return true si el usuario ya existe, false de lo contrario.
     */
    public boolean existeUsuario(String usu){
        boolean res = false; // Inicializa el resultado como falso
        if (principal.getListaCliente() != null) { // Verifica si la lista de clientes no es nula
            for (int i = 0; i < principal.getListaCliente().size(); i++) { // Recorre la lista de clientes
                if (principal.getListaCliente().get(i).getUsuario().equals(usu)) { // Compara el nombre de usuario
                    res = true; // Cambia el resultado a verdadero si el usuario ya existe
                    break; // Sale del bucle
                }
            }
        }
        return res; // Devuelve el resultado
    }
    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed
    /**
     * Método invocado cuando se presiona una tecla en el campo de texto txtCi.
     * Permite ingresar solo números y limita la longitud a 8 caracteres.
     */
    private void txtCiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCiKeyTyped
             char c = evt.getKeyChar();
        if (c < '0' || c > '9') evt.consume(); // Consume la tecla si no es un número
        if (txtCi.getText().length() >= 8) evt.consume(); // Consume la tecla si la longitud del texto es mayor o igual a 8 caracteres
    }//GEN-LAST:event_txtCiKeyTyped
     /**
     * Método invocado cuando se presiona una tecla en el campo de texto txtTelefono.
     * Permite ingresar solo números y limita la longitud a 8 caracteres.
     */
    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
             char c = evt.getKeyChar();
        if (c < '0' || c > '9') evt.consume(); // Consume la tecla si no es un número
        if (txtTelefono.getText().length() >= 8) evt.consume(); // Consume la tecla si la longitud del texto es mayor o igual a 8 caracteres
    
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void txtApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoActionPerformed
               
             
    }//GEN-LAST:event_txtApellidoActionPerformed
    /**
     * Método invocado cuando se presiona una tecla en el campo de texto txtApellido.
     * Permite ingresar solo letras.
     */
    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
                  char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) evt.consume(); // Consume la tecla si no es una letra
   
    }//GEN-LAST:event_txtApellidoKeyTyped
    /**
     * Método invocado cuando se presiona una tecla en el campo de texto txtNombre.
     * Permite ingresar solo letras.
     */
    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) evt.consume(); // Consume la tecla si no es una letra
 
    }//GEN-LAST:event_txtNombreKeyTyped
    /**
     * Método invocado cuando se hace clic en el botón jButton1.
     * Abre la ventana de ingreso de PIN.
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        IngresoPinQuechua ventana = new IngresoPinQuechua(); // Crea una instancia de la interfaz IngresoPin
        ventana.setVisible(true); // Hace visible la ventana de ingreso de PIN
        ventana.setLocationRelativeTo(null); // Establece la ubicación relativa de la ventana
        dispose(); // Cierra la ventana actual
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroQuechua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroQuechua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroQuechua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroQuechua.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroQuechua().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCi;
    private javax.swing.JTextField txtContraseña;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
